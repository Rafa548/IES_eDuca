# Use root/examplerootpass as user/password credentials
version: '3.9'

services:
  mysql_db:
    image: mysql/mysql-server:5.7
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 'rootpass'
      MYSQL_DATABASE: 'eDuca'
      MYSQL_USER: 'spring'
      MYSQL_PASSWORD: 'springpass'
    ports:
      - "3306:3306"
    networks:
      - default
    
  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.1
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - default

  kafka:
    image: confluentinc/cp-kafka:6.0.1
    depends_on:
      - zookeeper
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "9092"]
      interval: 30s
      timeout: 10s
      retries: 4
    networks:
      - default

  mongodb:
    image: mongo:latest
    restart: always
    environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: rootpass
        MONGO_INITDB_DATABASE: admin
    ports:
        - 27017:27017
    volumes:
        - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - default

  spring:
    build: ./eDucaApp
    container_name: spring
    ports:
      - 8080:8080
    restart: unless-stopped
    image: educaapp
    expose:
      - 8080
    depends_on:
      kafka:
          condition: service_healthy
    networks:
      - default

  generator:
    build: ./eDuca_dataGen
    restart: unless-stopped
    image: python-generator 
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - default

  angular:
    build: ./n_frontend
    container_name: angular
    stdin_open: true
    ports:
      - 4200:4200
    expose:
      - 4200
    restart: unless-stopped
    image: frontend
    networks:
      - default

networks:
  default:
    driver: bridge


  
